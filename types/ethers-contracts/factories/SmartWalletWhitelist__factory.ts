/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SmartWalletWhitelist,
  SmartWalletWhitelistInterface,
} from "../SmartWalletWhitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialApproved",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ApproveWallet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RevokeWallet",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "applySetChecker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "approveWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_checker",
        type: "address",
      },
    ],
    name: "commitSetChecker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "future_checker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "revokeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wallets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105ba3803806105ba8339818101604052604081101561003357600080fd5b508051602091820151600180546001600160a01b0319166001600160a01b0380851691909117825582166000818152808652604090819020805460ff191690931790925581519081529051929391927fc1e7aae3f3125e58cfc69ab2a872a655dbb9427614aa85b29bb5abeaca4d6a92929181900390910190a150506104fc806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638fcdecc8116100665780638fcdecc814610128578063943f35a41461014c578063c23697a814610172578063cf5303cf14610198578063f851a440146101a057610093565b80630fcb0ae51461009857806326b42b1a146100c0578063808a9d40146100c857806389b08f11146100ee575b600080fd5b6100be600480360360208110156100ae57600080fd5b50356001600160a01b03166101a8565b005b6100be610249565b6100be600480360360208110156100de57600080fd5b50356001600160a01b03166102b5565b6101146004803603602081101561010457600080fd5b50356001600160a01b0316610353565b604080519115158252519081900360200190f35b610130610368565b604080516001600160a01b039092168252519081900360200190f35b6100be6004803603602081101561016257600080fd5b50356001600160a01b0316610377565b6101146004803603602081101561018857600080fd5b50356001600160a01b03166103e1565b6101306104a8565b6101306104b7565b6001546001600160a01b031633146101f0576040805162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b604482015290519081900360640190fd5b6001600160a01b03811660008181526020818152604091829020805460ff19166001179055815192835290517fc1e7aae3f3125e58cfc69ab2a872a655dbb9427614aa85b29bb5abeaca4d6a929281900390910190a150565b6001546001600160a01b03163314610291576040805162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b604482015290519081900360640190fd5b600354600280546001600160a01b0319166001600160a01b03909216919091179055565b6001546001600160a01b031633146102fd576040805162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b604482015290519081900360640190fd5b6001600160a01b03811660008181526020818152604091829020805460ff19169055815192835290517f1b676c3cc753786cb95aff57280fd7406f1da74e2a8b9755fdd395aded3e16dd9281900390910190a150565b60006020819052908152604090205460ff1681565b6003546001600160a01b031681565b6001546001600160a01b031633146103bf576040805162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526020819052604081205460ff16801561040a5790506104a3565b6002546001600160a01b03161561049d5760025460408051631846d2f560e31b81526001600160a01b0386811660048301529151919092169163c23697a8916024808301926020929190829003018186803b15801561046857600080fd5b505afa15801561047c573d6000803e3d6000fd5b505050506040513d602081101561049257600080fd5b505191506104a39050565b60009150505b919050565b6002546001600160a01b031681565b6001546001600160a01b03168156fea2646970667358221220312e3e6056380e09d1178758c7fe09bc52f496dbab8e7cc42ac455b2b87f467364736f6c63430007060033";

export class SmartWalletWhitelist__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _admin: string,
    initialApproved: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmartWalletWhitelist> {
    return super.deploy(
      _admin,
      initialApproved,
      overrides || {}
    ) as Promise<SmartWalletWhitelist>;
  }
  getDeployTransaction(
    _admin: string,
    initialApproved: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, initialApproved, overrides || {});
  }
  attach(address: string): SmartWalletWhitelist {
    return super.attach(address) as SmartWalletWhitelist;
  }
  connect(signer: Signer): SmartWalletWhitelist__factory {
    return super.connect(signer) as SmartWalletWhitelist__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartWalletWhitelistInterface {
    return new utils.Interface(_abi) as SmartWalletWhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartWalletWhitelist {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SmartWalletWhitelist;
  }
}
