/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    inputs: [
      {
        name: "_name",
        type: "string",
      },
      {
        name: "_symbol",
        type: "string",
      },
      {
        name: "_decimals",
        type: "uint256",
      },
      {
        name: "_supply",
        type: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    gas: 74712,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 111006,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 37793,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 75643,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 74683,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "_mint_for_testing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 75473,
    inputs: [
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 111763,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    gas: 7793,
    inputs: [],
    name: "name",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    gas: 6846,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    gas: 1451,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    gas: 1635,
    inputs: [
      {
        name: "arg0",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    gas: 1819,
    inputs: [
      {
        name: "arg0",
        type: "address",
      },
      {
        name: "arg1",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    gas: 1541,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526080610aba6101403934156100a157600080fd5b60606020610aba60c03960c051610aba016101c03960406020610aba60c03960c0516004013511156100d257600080fd5b604060206020610aba0160c03960c051610aba0161024039602060206020610aba0160c03960c05160040135111561010957600080fd5b6101a051604e610180511061011d57600080fd5b61018051600a0a808202821582848304141761013857600080fd5b809050905090506102a0526101c080600060c052602060c020602082510161012060006003818352015b8261012051602002111561017557610197565b61012051602002850151610120518501555b8151600101808352811415610162575b50505050505061024080600160c052602060c020602082510161012060006002818352015b826101205160200211156101cf576101f1565b61012051602002850151610120518501555b81516001018083528114156101bc575b505050505050610180516002556102a05160033360e05260c052604060c020556102a051600555336006556102a0516102c0523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206102c0a3610aa256600436101561000d57610849565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263a9059cbb60005114156101635734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060033360e05260c052604060c0208054602435808210156100ec57600080fd5b80820390509050815550600360043560e05260c052604060c020805460243581818301101561011a57600080fd5b8082019050905081555060243561014052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b6323b872dd600051141561027357341561017c57600080fd5b600435602051811061018d57600080fd5b50602435602051811061019f57600080fd5b50600360043560e05260c052604060c0208054604435808210156101c257600080fd5b80820390509050815550600360243560e05260c052604060c02080546044358181830110156101f057600080fd5b80820190509050815550600460043560e05260c052604060c0203360e05260c052604060c02080546044358082101561022857600080fd5b80820390509050815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b63095ea7b360005114156102fd57341561028c57600080fd5b600435602051811061029d57600080fd5b5060243560043360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b6340c10f1960005114156103c857341561031657600080fd5b600435602051811061032757600080fd5b50600654331461033657600080fd5b60006004351861034557600080fd5b6005805460243581818301101561035b57600080fd5b80820190509050815550600360043560e05260c052604060c020805460243581818301101561038957600080fd5b808201905090508155506024356101405260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3005b63f8c1410260005114156104765734156103e157600080fd5b60043560205181106103f257600080fd5b506005805460243581818301101561040957600080fd5b80820190509050815550600360043560e05260c052604060c020805460243581818301101561043757600080fd5b808201905090508155506024356101405260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3005b600015610522575b6101805261014052610160526000610140511861049a57600080fd5b6005805461016051808210156104af57600080fd5b8082039050905081555060036101405160e05260c052604060c020805461016051808210156104dd57600080fd5b80820390509050815550610160516101a0526000610140517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206101a0a361018051565b6342966c68600051141561055d57341561053b57600080fd5b33610140526004356101605261016051610140516006580161047e565b600050005b6379cc679060005114156105e457341561057657600080fd5b600435602051811061058757600080fd5b50600460043560e05260c052604060c0203360e05260c052604060c0208054602435808210156105b657600080fd5b80820390509050815550600435610140526024356101605261016051610140516006580161047e565b600050005b6306fdde0360005114156106985734156105fd57600080fd5b60008060c052602060c020610180602082540161012060006003818352015b8261012051602002111561062f57610651565b61012051850154610120516020028501525b815160010180835281141561061c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b41600051141561074c5734156106b157600080fd5b60018060c052602060c020610180602082540161012060006002818352015b826101205160200211156106e357610705565b61012051850154610120516020028501525b81516001018083528114156106d0575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b63313ce567600051141561077357341561076557600080fd5b60025460005260206000f350005b6370a0823160005114156107ba57341561078c57600080fd5b600435602051811061079d57600080fd5b50600360043560e05260c052604060c0205460005260206000f350005b63dd62ed3e60005114156108215734156107d357600080fd5b60043560205181106107e457600080fd5b5060243560205181106107f657600080fd5b50600460043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b6318160ddd600051141561084857341561083a57600080fd5b60055460005260206000f350005b5b60006000fd5b610253610aa203610253600039610253610aa2036000f3";

export class ERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _supply,
      overrides || {}
    ) as Promise<ERC20>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _supply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _supply,
      overrides || {}
    );
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
